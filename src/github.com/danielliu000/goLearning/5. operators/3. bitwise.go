package main

import "fmt"

func main() {
	// 二进制位运算都是以补码进行运算
	// 正数和零 原码 反码 补码相同
	// 负数最高位位符号位， 反码为除符号位取反， 补码为反码+1

	// -2 异或 2
	// 都是以补码进行运算
	// 正数和零 原码 反码 补码相同
	// 负数最高位位符号位， 反码为除符号位取反， 补码为反码+1
	// -2 的原码： 1000 0010
	// -2 的反码： 1111 1101
	// -2 的补码： 1111 1110
	//  2 的补码： 0000 0010
	// 进行异或：  1111 1100 （仍为补码形式）
	// 再转为原码：1111 1011 （反码） => 1000 0100 =>结果 -4
	fmt.Println(-2^2)
	fmt.Println(-2^-3) //异或
	fmt.Println(-2|3)  //按位或
	fmt.Println(-2&-3) //按位与


	fmt.Println(-3>>2) //右移2位 => 低位溢出，符号位不变，并用符号位补溢出高位
	// 1. -3补码 => 1111 1101
	// 2. 右移2位 => 1111 11xx
	// 3. 用符号位补位 1111 1111
	// 4. 转为原码 1111 1110 => 1000 0001 => -1
	fmt.Println(-3<<2) //左移2位 => 符号位不变，底位补0
	// 1. -3补码 => 1111 1101
	// 2. 左移2位 =>1111 01xx
	// 3. 保持符号位，底位补0  => 1111 0100
	// 4. 转为原码 1111 0011 => 1000 1100 => -12


}
